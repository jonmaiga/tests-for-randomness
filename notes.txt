TODO:
-----
- Possible to seed all tests at startup
- What is a good fitness function. Design an experiment: 
	- which streams should be used
	- which tests should be used
	- how many datapoints per test should be used
	- which fitness function works best? minimize kolmogorov, chi2, ad? all? count fails?
- Determine false positive rate
- Trng should not have to lock?

DONE:
-----
- Make it work with large n
	* need to run some tests multiple times (kendall and all that requires sorting etc)
	* need to be able to continue a stream
- Pass in cmd line args for trng file
- Proper tags instead of string contains in query
  Simple fix is to have exact match for mixer names. Lets see how far it goes.

OTHER:
------

	
	// not sure what to do with variance, can't get p values uniformly distributed.
	// https://www.youtube.com/watch?v=V4Rm4UQHij0 sampling dist of variance is not normal!
	// We can't use this for variance since it's sampling is non normal!
	// https://stats.stackexchange.com/questions/121662/why-is-the-sampling-distribution-of-variance-a-chi-squared-distribution
	//constexpr auto pop_var = 1. / 12.;
	//const auto var_x2 = (n - 1) * stats.variance / pop_var;
	//const auto p_value = chi2_distribution_normal_approximation_cdf(var_x2, n - 1);
	//const auto p_value = f_test(stats.n, stats.variance, population_variance);
	//const auto pop_var_var = 2 * pop_var * pop_var / (n - 1);
	//const auto p_value = z_test(stats.n, stats.variance, pop_var, pop_var_var);