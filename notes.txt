TODO:
-----
- inspect tests: ww fails after bug fix.
- bc3d trng fails
- permutation trng fails (64bit, trng seed 301071360, 2^20), (32-bit, trngs seed 602142720, 2^20/21: C:\tmp\random.org\raw\random.org-pregenerated-2012-11-bin\2012-11-30.bin) 

- use trng to see if we can get evaluate_multi_pass working from 2^4 ? 
- Select maximize or minimize in sffs.
- Determine false positive rate
- Splits are added many times if same result formatter is used when n increases (see e.g. kendall_tau).
- Speed up tests, bad CPU utilization atm, this should done in the jobs, keeping X threads, jumping between job queues.
	- for now just increasing sffs threads works (but probably has a ton of overhead)
- ww, coupons at k=0 hangs...

DONE:
-----
- fix formatting of suspicous streams (should be in value column)
- testable: mixers, combiners, hashers, prngs
- add sanity tests
- self-inspect tests?
- which tests are two sided? ww? z-test should only look on values close to zero. z-score only checks near 0
- combiner with 0, 0 constant streams shows that many tests are inconclusive still the meta interpretation passes.
  * fixed problem with coupon,gap and divisibility solved it.
- Show biggest offenders in tests result.
- Not necessary: Possible to seed all tests at startup (counter1 makes no sense only for trng or mixed data)
- Make it work with large n
	* need to run some tests multiple times (kendall and all that requires sorting etc)
	* need to be able to continue a stream
- Pass in cmd line args for trng file
- Proper tags instead of string contains in query
  Simple fix is to have exact match for mixer names. Lets see how far it goes.
- does divisibility work as it should? Or too few data points??
	- bit-isolation fails trng with d3:
		Using 16640 samples per test, each with 10000 data points.
		test             trng1       mx3          nasam       xmxmx       moremur      lea64        degski64   splitmix     murmur3    xmx
		divisibility-d2  P (169)     F*(171)      P (179)     P (151)     P (199)      P (169)      P (197)    P (191)      P (197)    F*(16617)
		divisibility-d3  F*(214)     P (187)      F*(256)     P (209)     P (226)      P (227)      P (187)    P (218)      P (198)    F*(11125)
		kolmogorov_d     0.00182935  0.000238291  0.0493007   0.00108469  0.0205633    0.000619493  0.0157931  0.0123172    0.232204   0
		anderson_a2      0.994346    0.999978     0.996995    0.999219    0.99981      0.999902     0.994976   0.997893     0.981366   1
		chi2             0.00244941  0.00051067   5.8374e-05  0.311584    3.19588e-07  0.0072541    0.155593   2.15719e-05  0.0774099  0
		fails            383         358          435         360         425          396          384        409          395        27742
	- have potential fixed commited, test it
- Power of two tests
- Incremental tests
	(keep stream state and emit results along the way, will halfen the required cpu time)
	(basic - sum of squares need to be completely reevaluated)
	(sac, bic - state can continue)
	(chi2 - more data more bins - needs recompute)
	(overall it seems like additional complexity doesn't make it worth while)
	NOT FEASIBLE
- should mean test be two sided (sample mean == population mean => 1)
	test subject     mx3             
	2^k              21              
	samples          256             
	mean-m           failure (5)
	Extracted means, worst offenders where type I mma had same result for individual rrcs and same meta_analysis.
- Trng should not have to lock? Instead use seeded mx3 to extract values
- add prng testing
- What is a good fitness function. Design an experiment: 
	- which streams should be used = counter1 + rrc
		(rrc, bit-isolation, sources: (trng?, mixed, counter1, ?))
	- which tests should be used
		tests are documented with comment.
		(remove redundant/correlated tests)
	- how many datapoints per test should be used 
		multi-pass until failure.
		(preliminary minimum 5k-10k while 100k seems stable in terms of fails)
	- which fitness function works best? minimize kolmogorov, chi2, ad? all? count fails?
		max_power-failure_power + ks.
		(preliminary pretty much same-same it seems, but minimizing it might not be what we want (too regular?))
		(maybe optimize on outliers?)
		(probably how far it survives the tests, pract-rand style!)


OTHER:
------
// not sure what to do with variance, can't get p values uniformly distributed.
// https://www.youtube.com/watch?v=V4Rm4UQHij0 sampling dist of variance is not normal!
// We can't use this for variance since it's sampling is non normal!
// https://stats.stackexchange.com/questions/121662/why-is-the-sampling-distribution-of-variance-a-chi-squared-distribution
//constexpr auto pop_var = 1. / 12.;
//const auto var_x2 = (n - 1) * stats.variance / pop_var;
//const auto p_value = chi2_distribution_normal_approximation_cdf(var_x2, n - 1);
//const auto p_value = f_test(stats.n, stats.variance, population_variance);
//const auto pop_var_var = 2 * pop_var * pop_var / (n - 1);
//const auto p_value = z_test(stats.n, stats.variance, pop_var, pop_var_var);

Tried sffs over jenkins came to 2^12 ish. Not worth it. (see jenkins-config branch)
Tried sffs over xxmxx with different variations. Not worth it.
Divisible test seems very weak.
Tested bit matrix, very weak.


With ww fix:
KEY           VALUE
test subject  pcg
2^k           33
samples       128
n per sample  8589934592
-------       -------
ww-s1321      suspicious (5)
ww-s2012      suspicious (5)
ww-s2517      suspicious (5)
ww-s3209      very suspicious (7)
ww-s4279      suspicious (5)
ww-s5483      suspicious (5)
ww-s5947      suspicious (5)
ww-s6580      suspicious (5)
ww-s6926      suspicious (6)
ww-s7910      suspicious (5)
ww-s850       suspicious (5)
-------       -------
SUMMARY       PASS: very suspicious (7)

Executing command -test
KEY                     VALUE
test subject            pcg-1
2^k                     30
samples                 128
n per sample            1073741824
-------                 -------
ww-pcg-3062792213-s850  suspicious (5)
-------                 -------
SUMMARY                 PASS: suspicious (5)


KEY           VALUE
test subject  mt
2^k           29
samples       128
n per sample  536870912
-------       -------
ww-mt-s125    suspicious (5)
-------       -------
SUMMARY       PASS: suspicious (5)


KEY                          VALUE
test subject                 xoshiro128plusplus
2^k                          31
samples                      128
n per sample                 2147483648
-------                      -------
ww-xoshiro128plusplus-s1482  suspicious (5)
ww-xoshiro128plusplus-s1613  suspicious (5)
ww-xoshiro128plusplus-s621   suspicious (5)
-------                      -------
SUMMARY                      PASS: suspicious (5)